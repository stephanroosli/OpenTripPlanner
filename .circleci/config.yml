version: 2
aliases:
  - &GCP-auth
    name: GCP Authenticate
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/gcp_authenticate.sh
  - &docker-login
    name: Docker login
    command: |
      echo 'export GCLOUD_SERVICE_KEY="$GCLOUD_SERVICE_KEY"' >> $BASH_ENV
      /tools/docker_login.sh
  - &docker-build-and-push
    name: Docker build and push
    command: |
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      /tools/docker_build_push.sh
    environment:
      CIRCLE_PROJECT_REPONAME: otp-x
  - &build-notify
    name: Notify babylon about build and docker image pushed
    command: |
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      echo 'export BUILD_STATUS_API_KEY="$BUILD_STATUS_API_KEY"' >> $BASH_ENV
      /tools/build_notify.sh
    environment:
      CIRCLE_PROJECT_REPONAME: otp-x
  - &post_build
    name: Trigger downstream builds
    command: |
      echo 'export CIRCLE_SHA1="$CIRCLE_SHA1"' >> $BASH_ENV
      echo 'export CIRCLE_PROJECT_REPONAME="$CIRCLE_PROJECT_REPONAME"' >> $BASH_ENV
      echo 'export GITHUB_TOKEN="$GITHUB_TOKEN"' >> $BASH_ENV
      /tools/trigger_build.sh "entur/marduk.git" "marduk-x" "$(git log -1 --pretty=%B)"
jobs:
  test:
    docker:
    - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s /tools/m2/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn test -s /tools/m2/settings.xml
    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
  deploy-jfrog:
    docker:
    - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
      auth:
        username: _json_key
        password: $GCLOUD_SERVICE_KEY
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -B -q -s /tools/m2/settings.xml
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    - run: mvn deploy -s /tools/m2/settings.xml -DskipTests
    - persist_to_workspace:
        root: ~/project
        paths:
          - target
          - pom.xml
          - .circleci
          - Dockerfile
          - docker
  notify-build:
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    steps:
    - run: *build-notify
  deploy-docker:
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - attach_workspace:
          at: ~/project
      - restore_cache:
          key: dep-cache-{{ checksum "pom.xml" }}
      - setup_remote_docker:
          docker_layer_caching: true
      - run: *GCP-auth
      - run: *docker-login
      - run: *docker-build-and-push
  trigger-dependants:
    docker:
      - image: eu.gcr.io/carbon-1287/circleci-toolbox-image-java11
        auth:
          username: _json_key
          password: $GCLOUD_SERVICE_KEY
    steps:
    - run: *post_build
workflows:
  version: 2
  build_test_deploy:
    jobs:
    - test:
        context: org-carbon
    - deploy-jfrog:
        context: org-carbon
        requires:
        - test
        filters:
          branches:
            only:
              - entur_raptor
              - rutebanken_develop
              - otp-x
    - deploy-docker:
        context: org-carbon
        requires:
        - deploy-jfrog
    - notify-build:
        context: org-carbon
        requires:
          - deploy-docker
    - trigger-dependants:
        context: org-carbon
        requires:
        - deploy-jfrog